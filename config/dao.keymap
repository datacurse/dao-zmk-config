#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt { quick_tap_ms = <200>; };

&lt { quick_tap_ms = <200>; };

&mmv {
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        home {
            bindings = <&kp END>;
            key-positions = <37 16>;
            layers = <2>;
        };

        pg_up {
            bindings = <&kp PG_DN>;
            key-positions = <37 15>;
            layers = <2>;
        };

        pg_dn {
            bindings = <&kp PG_UP>;
            key-positions = <37 14>;
            layers = <2>;
        };

        end {
            bindings = <&kp HOME>;
            key-positions = <37 13>;
            layers = <2>;
        };

        ctrl_v {
            bindings = <&kp LC(V)>;
            key-positions = <37 28>;
            layers = <0>;
        };

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <37 2>;
        };

        tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <37 4>;
        };

        tab_prev {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <3 37>;
        };

        ctrl+c {
            bindings = <&kp LC(C)>;
            key-positions = <37 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        text {
            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P      &kp B            &kp J            &kp L        &kp U      &kp Y    &kp GRAVE  &trans
&trans  &kp A  &kp R  &kp S   &kp T      &kp G            &kp M            &kp N        &kp E      &kp I    &kp O      &trans
&trans  &kp Z  &kp X  &kp C   &kp D      &kp V            &kp K            &kp H        &kp COMMA  &kp DOT  &kp FSLH   &trans
                      &trans  &kp LCTRL  &mt LSHFT SPACE  &lt 1 BACKSPACE  &lt 2 ENTER  &trans
            >;
        };

        num_sym {
            bindings = <
&trans  &kp N6  &kp N7  &kp N8  &kp N9     &kp N0            &trans           &kp RA(TAB)  &kp MINUS         &kp EQUAL          &kp RIGHT_WIN  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5            &trans           &kp TAB      &kp ESCAPE        &kp APOS           &kp SEMI       &trans
&trans  &trans  &trans  &trans  &trans     &trans            &trans           &kp DELETE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &trans
                        &trans  &kp LCTRL  &mt LSHIFT SPACE  &lt 1 BACKSPACE  &lt 2 ENTER  &trans
            >;
        };

        nav_mouse {
            bindings = <
&trans  &trans    &trans  &trans    &trans     &trans     &trans  &kp C_VOLUME_DOWN  &kp K_MUTE    &kp C_VOLUME_UP  &bt BT_CLR_ALL   &trans
&trans  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans     &trans  &mmv MOVE_LEFT     &mmv MOVE_UP  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &trans
&trans  &trans    &trans  &trans    &trans     &trans     &trans  &trans             &trans        &trans           &sys_reset       &trans
                          &trans    &mkp RCLK  &mkp LCLK  &trans  &trans             &trans
            >;
        };
    };
};
